# Updated via ansible

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=100000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

PS1='\n\[\e[1;32m\]\u@\h\[\e[0m\]:\[\e[0;33m\]\w\[\e[0m\]$(__git_ps1 " (%s)")\n\$ '

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias 
if [ -f ~/.bash/bash_aliases ]; then
    . ~/.bash/bash_aliases
fi

# Enable programmable completion features in bash
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Git prompt, set didn't work changed to export and seems fine now
if [ -f /usr/share/git/completion/git-prompt.sh ] && [ -x "$(command -v git)" ]; then
  . /usr/share/git/completion/git-prompt.sh
  export GIT_PS1_SHOWUPSTREAM="auto"
  export GIT_PS1_SHOWUNTRACKEDFILES=true
  export GIT_PS1_SHOWSTASHSTATE=true
  export GIT_PS1_SHOWDIRTYSTATE=true
fi

if [ -f /usr/share/git/completion/git-completion.bash ] && [ -x "$(command -v git)" ]; then
  . /usr/share/git/completion/git-completion.bash
fi

# Source fzf files
# Should work on arch and ubuntu based distros
if [ -x "$(command -v fzf)" ]; then
  if [ -f ~/.config/fzf/key-bindings.bash ] && [ -f ~/.config/fzf/completion.bash ]; then
    . ~/.config/fzf/key-bindings.bash
    . ~/.config/fzf/completion.bash
  elif [ -f /usr/share/fzf/key-bindings.bash ] && [ -f /usr/share/fzf/completion.bash ]; then
    . /usr/share/fzf/key-bindings.bash
    . /usr/share/fzf/completion.bash
  elif [ -f /usr/share/doc/fzf/examples/key-bindings.bash ] && [ -f /usr/share/doc/fzf/examples/completion.bash ]; then
    . /usr/share/doc/fzf/examples/key-bindings.bash
    . /usr/share/doc/fzf/examples/completion.bash
  fi
fi

# Keychain setup only if keychain and ssh-agent are there
if [ -x "$(command -v keychain)" ] && [ -x "$(command -v ssh-agent)" ]; then
  eval $(keychain --eval --agents ssh --nogui --noask --timeout 60 --quiet)
fi

# Enables colors in manpages, this doesn't negatively impact anything that I know of
export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline


# Functions
# cdl is cd + ls 
cdl() { cd "$@" && ls -A; }
